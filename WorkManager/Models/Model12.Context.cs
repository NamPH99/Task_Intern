//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WorkManager.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class DBWM2Entities1 : DbContext
    {
        public DBWM2Entities1()
            : base("name=DBWM2Entities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DUAN> DUANs { get; set; }
        public virtual DbSet<MODULE> MODULEs { get; set; }
        public virtual DbSet<NGUOIDUNG> NGUOIDUNGs { get; set; }
        public virtual DbSet<NHANVIEN> NHANVIENs { get; set; }
        public virtual DbSet<NHOMNGUOIDUNG> NHOMNGUOIDUNGs { get; set; }
        public virtual DbSet<PHANQUYEN> PHANQUYENs { get; set; }
        public virtual DbSet<QL_CONGVIEC> QL_CONGVIEC { get; set; }
        public virtual DbSet<QL_NGUOIDUNGNHOMNGUOIDUNG> QL_NGUOIDUNGNHOMNGUOIDUNG { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<THANG> THANGs { get; set; }
        public virtual DbSet<TUAN> TUANs { get; set; }
        public virtual DbSet<TODOLIST> TODOLISTs { get; set; }
    
        public virtual int DELETEMONTH(Nullable<int> gIATRI, Nullable<int> nAM)
        {
            var gIATRIParameter = gIATRI.HasValue ?
                new ObjectParameter("GIATRI", gIATRI) :
                new ObjectParameter("GIATRI", typeof(int));
    
            var nAMParameter = nAM.HasValue ?
                new ObjectParameter("NAM", nAM) :
                new ObjectParameter("NAM", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETEMONTH", gIATRIParameter, nAMParameter);
        }
    
        public virtual ObjectResult<getModalWeek_Result> getModalWeek(Nullable<int> thang, Nullable<int> nam)
        {
            var thangParameter = thang.HasValue ?
                new ObjectParameter("Thang", thang) :
                new ObjectParameter("Thang", typeof(int));
    
            var namParameter = nam.HasValue ?
                new ObjectParameter("Nam", nam) :
                new ObjectParameter("Nam", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getModalWeek_Result>("getModalWeek", thangParameter, namParameter);
        }
    
        public virtual ObjectResult<getMonth_Result> getMonth()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getMonth_Result>("getMonth");
        }
    
        public virtual ObjectResult<getmonth1_Result> getmonth1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getmonth1_Result>("getmonth1");
        }
    
        public virtual ObjectResult<getmonth2_Result> getmonth2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getmonth2_Result>("getmonth2");
        }
    
        public virtual ObjectResult<Nullable<int>> getmonth3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("getmonth3");
        }
    
        public virtual ObjectResult<getProject_Result> getProject(string tENDN)
        {
            var tENDNParameter = tENDN != null ?
                new ObjectParameter("TENDN", tENDN) :
                new ObjectParameter("TENDN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getProject_Result>("getProject", tENDNParameter);
        }
    
        public virtual ObjectResult<getWeek_Result> getWeek(Nullable<int> giaTri)
        {
            var giaTriParameter = giaTri.HasValue ?
                new ObjectParameter("GiaTri", giaTri) :
                new ObjectParameter("GiaTri", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getWeek_Result>("getWeek", giaTriParameter);
        }
    
        public virtual ObjectResult<getWorkWeek_Result> getWorkWeek()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getWorkWeek_Result>("getWorkWeek");
        }
    
        public virtual ObjectResult<getWorkWeek1_Result> getWorkWeek1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getWorkWeek1_Result>("getWorkWeek1");
        }
    
        public virtual int INSERTMONTH(Nullable<int> gIATRI, Nullable<int> nam, string tHANG, Nullable<System.DateTime> nGAYBATDAU, Nullable<System.DateTime> nGAYKETTHUC)
        {
            var gIATRIParameter = gIATRI.HasValue ?
                new ObjectParameter("GIATRI", gIATRI) :
                new ObjectParameter("GIATRI", typeof(int));
    
            var namParameter = nam.HasValue ?
                new ObjectParameter("Nam", nam) :
                new ObjectParameter("Nam", typeof(int));
    
            var tHANGParameter = tHANG != null ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(string));
    
            var nGAYBATDAUParameter = nGAYBATDAU.HasValue ?
                new ObjectParameter("NGAYBATDAU", nGAYBATDAU) :
                new ObjectParameter("NGAYBATDAU", typeof(System.DateTime));
    
            var nGAYKETTHUCParameter = nGAYKETTHUC.HasValue ?
                new ObjectParameter("NGAYKETTHUC", nGAYKETTHUC) :
                new ObjectParameter("NGAYKETTHUC", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERTMONTH", gIATRIParameter, namParameter, tHANGParameter, nGAYBATDAUParameter, nGAYKETTHUCParameter);
        }
    
        public virtual ObjectResult<LOADBYMONTH_Result> LOADBYMONTH(Nullable<int> mONTH, Nullable<int> yEAR)
        {
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LOADBYMONTH_Result>("LOADBYMONTH", mONTHParameter, yEARParameter);
        }
    
        public virtual ObjectResult<LOADBYMONTH1_Result> LOADBYMONTH1(Nullable<int> mONTH, Nullable<int> yEAR)
        {
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LOADBYMONTH1_Result>("LOADBYMONTH1", mONTHParameter, yEARParameter);
        }
    
        public virtual ObjectResult<LOADBYMONTHAll_Result> LOADBYMONTHAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LOADBYMONTHAll_Result>("LOADBYMONTHAll");
        }
    
        public virtual ObjectResult<LOADBYMONTHAll1_Result> LOADBYMONTHAll1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LOADBYMONTHAll1_Result>("LOADBYMONTHAll1");
        }
    
        public virtual ObjectResult<LOADBYMONTHTEST_Result> LOADBYMONTHTEST(Nullable<int> mONTH, Nullable<int> yEAR)
        {
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            var yEARParameter = yEAR.HasValue ?
                new ObjectParameter("YEAR", yEAR) :
                new ObjectParameter("YEAR", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<LOADBYMONTHTEST_Result>("LOADBYMONTHTEST", mONTHParameter, yEARParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> loadnam()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("loadnam");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<TEST_Result> TEST(Nullable<int> mONTH)
        {
            var mONTHParameter = mONTH.HasValue ?
                new ObjectParameter("MONTH", mONTH) :
                new ObjectParameter("MONTH", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TEST_Result>("TEST", mONTHParameter);
        }
    
        public virtual int UPDATEMONTH(Nullable<int> gIATRI, Nullable<int> nam, string tHANG, Nullable<System.DateTime> nGAYBATDAU, Nullable<System.DateTime> nGAYKETTHUC)
        {
            var gIATRIParameter = gIATRI.HasValue ?
                new ObjectParameter("GIATRI", gIATRI) :
                new ObjectParameter("GIATRI", typeof(int));
    
            var namParameter = nam.HasValue ?
                new ObjectParameter("Nam", nam) :
                new ObjectParameter("Nam", typeof(int));
    
            var tHANGParameter = tHANG != null ?
                new ObjectParameter("THANG", tHANG) :
                new ObjectParameter("THANG", typeof(string));
    
            var nGAYBATDAUParameter = nGAYBATDAU.HasValue ?
                new ObjectParameter("NGAYBATDAU", nGAYBATDAU) :
                new ObjectParameter("NGAYBATDAU", typeof(System.DateTime));
    
            var nGAYKETTHUCParameter = nGAYKETTHUC.HasValue ?
                new ObjectParameter("NGAYKETTHUC", nGAYKETTHUC) :
                new ObjectParameter("NGAYKETTHUC", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATEMONTH", gIATRIParameter, namParameter, tHANGParameter, nGAYBATDAUParameter, nGAYKETTHUCParameter);
        }
    
        public virtual ObjectResult<DUAN> GETPROJECTS(string tENDN)
        {
            var tENDNParameter = tENDN != null ?
                new ObjectParameter("TENDN", tENDN) :
                new ObjectParameter("TENDN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DUAN>("GETPROJECTS", tENDNParameter);
        }
    
        public virtual ObjectResult<DUAN> GETPROJECTS(string tENDN, MergeOption mergeOption)
        {
            var tENDNParameter = tENDN != null ?
                new ObjectParameter("TENDN", tENDN) :
                new ObjectParameter("TENDN", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DUAN>("GETPROJECTS", mergeOption, tENDNParameter);
        }
    
        public virtual int LockPlan(Nullable<int> giatri, Nullable<int> nam, Nullable<int> tinhtrang)
        {
            var giatriParameter = giatri.HasValue ?
                new ObjectParameter("giatri", giatri) :
                new ObjectParameter("giatri", typeof(int));
    
            var namParameter = nam.HasValue ?
                new ObjectParameter("nam", nam) :
                new ObjectParameter("nam", typeof(int));
    
            var tinhtrangParameter = tinhtrang.HasValue ?
                new ObjectParameter("tinhtrang", tinhtrang) :
                new ObjectParameter("tinhtrang", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LockPlan", giatriParameter, namParameter, tinhtrangParameter);
        }
    
        public virtual int LockPlan1(Nullable<int> giatri, Nullable<int> nam, Nullable<int> stt, Nullable<int> tinhtrang)
        {
            var giatriParameter = giatri.HasValue ?
                new ObjectParameter("giatri", giatri) :
                new ObjectParameter("giatri", typeof(int));
    
            var namParameter = nam.HasValue ?
                new ObjectParameter("nam", nam) :
                new ObjectParameter("nam", typeof(int));
    
            var sttParameter = stt.HasValue ?
                new ObjectParameter("stt", stt) :
                new ObjectParameter("stt", typeof(int));
    
            var tinhtrangParameter = tinhtrang.HasValue ?
                new ObjectParameter("tinhtrang", tinhtrang) :
                new ObjectParameter("tinhtrang", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("LockPlan1", giatriParameter, namParameter, sttParameter, tinhtrangParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> LockPlan12(Nullable<int> giatri, Nullable<int> nam, Nullable<int> stt)
        {
            var giatriParameter = giatri.HasValue ?
                new ObjectParameter("giatri", giatri) :
                new ObjectParameter("giatri", typeof(int));
    
            var namParameter = nam.HasValue ?
                new ObjectParameter("nam", nam) :
                new ObjectParameter("nam", typeof(int));
    
            var sttParameter = stt.HasValue ?
                new ObjectParameter("stt", stt) :
                new ObjectParameter("stt", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("LockPlan12", giatriParameter, namParameter, sttParameter);
        }
    
        public virtual ObjectResult<getWorkWeek12_Result> getWorkWeek12()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<getWorkWeek12_Result>("getWorkWeek12");
        }
    
        public virtual ObjectResult<GetAllToDo_Result> GetAllToDo(string mAMH)
        {
            var mAMHParameter = mAMH != null ?
                new ObjectParameter("MAMH", mAMH) :
                new ObjectParameter("MAMH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllToDo_Result>("GetAllToDo", mAMHParameter);
        }
    
        public virtual ObjectResult<GetAllToDo1_Result> GetAllToDo1(string mAMH)
        {
            var mAMHParameter = mAMH != null ?
                new ObjectParameter("MAMH", mAMH) :
                new ObjectParameter("MAMH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllToDo1_Result>("GetAllToDo1", mAMHParameter);
        }
    
        public virtual ObjectResult<GetAllToDo2_Result> GetAllToDo2(string mAMH)
        {
            var mAMHParameter = mAMH != null ?
                new ObjectParameter("MAMH", mAMH) :
                new ObjectParameter("MAMH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllToDo2_Result>("GetAllToDo2", mAMHParameter);
        }
    
        public virtual ObjectResult<sortToDo_Result> sortToDo(string nOIDUNG, Nullable<int> mANV, Nullable<int> nGAYTRE, Nullable<System.DateTime> tUNGAY, Nullable<System.DateTime> dENNGAY, Nullable<int> tRANGTHAI, string mAMH)
        {
            var nOIDUNGParameter = nOIDUNG != null ?
                new ObjectParameter("NOIDUNG", nOIDUNG) :
                new ObjectParameter("NOIDUNG", typeof(string));
    
            var mANVParameter = mANV.HasValue ?
                new ObjectParameter("MANV", mANV) :
                new ObjectParameter("MANV", typeof(int));
    
            var nGAYTREParameter = nGAYTRE.HasValue ?
                new ObjectParameter("NGAYTRE", nGAYTRE) :
                new ObjectParameter("NGAYTRE", typeof(int));
    
            var tUNGAYParameter = tUNGAY.HasValue ?
                new ObjectParameter("TUNGAY", tUNGAY) :
                new ObjectParameter("TUNGAY", typeof(System.DateTime));
    
            var dENNGAYParameter = dENNGAY.HasValue ?
                new ObjectParameter("DENNGAY", dENNGAY) :
                new ObjectParameter("DENNGAY", typeof(System.DateTime));
    
            var tRANGTHAIParameter = tRANGTHAI.HasValue ?
                new ObjectParameter("TRANGTHAI", tRANGTHAI) :
                new ObjectParameter("TRANGTHAI", typeof(int));
    
            var mAMHParameter = mAMH != null ?
                new ObjectParameter("MAMH", mAMH) :
                new ObjectParameter("MAMH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sortToDo_Result>("sortToDo", nOIDUNGParameter, mANVParameter, nGAYTREParameter, tUNGAYParameter, dENNGAYParameter, tRANGTHAIParameter, mAMHParameter);
        }
    
        public virtual ObjectResult<sortToDo1_Result> sortToDo1(string nOIDUNG, Nullable<int> mANV, Nullable<int> nGAYTRE, Nullable<System.DateTime> tUNGAY, Nullable<System.DateTime> dENNGAY, Nullable<int> tRANGTHAI, string mAMH)
        {
            var nOIDUNGParameter = nOIDUNG != null ?
                new ObjectParameter("NOIDUNG", nOIDUNG) :
                new ObjectParameter("NOIDUNG", typeof(string));
    
            var mANVParameter = mANV.HasValue ?
                new ObjectParameter("MANV", mANV) :
                new ObjectParameter("MANV", typeof(int));
    
            var nGAYTREParameter = nGAYTRE.HasValue ?
                new ObjectParameter("NGAYTRE", nGAYTRE) :
                new ObjectParameter("NGAYTRE", typeof(int));
    
            var tUNGAYParameter = tUNGAY.HasValue ?
                new ObjectParameter("TUNGAY", tUNGAY) :
                new ObjectParameter("TUNGAY", typeof(System.DateTime));
    
            var dENNGAYParameter = dENNGAY.HasValue ?
                new ObjectParameter("DENNGAY", dENNGAY) :
                new ObjectParameter("DENNGAY", typeof(System.DateTime));
    
            var tRANGTHAIParameter = tRANGTHAI.HasValue ?
                new ObjectParameter("TRANGTHAI", tRANGTHAI) :
                new ObjectParameter("TRANGTHAI", typeof(int));
    
            var mAMHParameter = mAMH != null ?
                new ObjectParameter("MAMH", mAMH) :
                new ObjectParameter("MAMH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sortToDo1_Result>("sortToDo1", nOIDUNGParameter, mANVParameter, nGAYTREParameter, tUNGAYParameter, dENNGAYParameter, tRANGTHAIParameter, mAMHParameter);
        }
    
        public virtual ObjectResult<sortToDo2_Result> sortToDo2(string nOIDUNG, Nullable<int> mANV, Nullable<int> nGAYTRE, Nullable<System.DateTime> tUNGAY, Nullable<System.DateTime> dENNGAY, Nullable<int> tRANGTHAI, string mAMH)
        {
            var nOIDUNGParameter = nOIDUNG != null ?
                new ObjectParameter("NOIDUNG", nOIDUNG) :
                new ObjectParameter("NOIDUNG", typeof(string));
    
            var mANVParameter = mANV.HasValue ?
                new ObjectParameter("MANV", mANV) :
                new ObjectParameter("MANV", typeof(int));
    
            var nGAYTREParameter = nGAYTRE.HasValue ?
                new ObjectParameter("NGAYTRE", nGAYTRE) :
                new ObjectParameter("NGAYTRE", typeof(int));
    
            var tUNGAYParameter = tUNGAY.HasValue ?
                new ObjectParameter("TUNGAY", tUNGAY) :
                new ObjectParameter("TUNGAY", typeof(System.DateTime));
    
            var dENNGAYParameter = dENNGAY.HasValue ?
                new ObjectParameter("DENNGAY", dENNGAY) :
                new ObjectParameter("DENNGAY", typeof(System.DateTime));
    
            var tRANGTHAIParameter = tRANGTHAI.HasValue ?
                new ObjectParameter("TRANGTHAI", tRANGTHAI) :
                new ObjectParameter("TRANGTHAI", typeof(int));
    
            var mAMHParameter = mAMH != null ?
                new ObjectParameter("MAMH", mAMH) :
                new ObjectParameter("MAMH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sortToDo2_Result>("sortToDo2", nOIDUNGParameter, mANVParameter, nGAYTREParameter, tUNGAYParameter, dENNGAYParameter, tRANGTHAIParameter, mAMHParameter);
        }
    
        public virtual int insertToDo(string noidung, Nullable<int> manv, string thoihan, Nullable<System.DateTime> ngaygiao, Nullable<System.DateTime> denhan, string ghichu, Nullable<int> trangthai, string maMH)
        {
            var noidungParameter = noidung != null ?
                new ObjectParameter("noidung", noidung) :
                new ObjectParameter("noidung", typeof(string));
    
            var manvParameter = manv.HasValue ?
                new ObjectParameter("Manv", manv) :
                new ObjectParameter("Manv", typeof(int));
    
            var thoihanParameter = thoihan != null ?
                new ObjectParameter("thoihan", thoihan) :
                new ObjectParameter("thoihan", typeof(string));
    
            var ngaygiaoParameter = ngaygiao.HasValue ?
                new ObjectParameter("ngaygiao", ngaygiao) :
                new ObjectParameter("ngaygiao", typeof(System.DateTime));
    
            var denhanParameter = denhan.HasValue ?
                new ObjectParameter("denhan", denhan) :
                new ObjectParameter("denhan", typeof(System.DateTime));
    
            var ghichuParameter = ghichu != null ?
                new ObjectParameter("ghichu", ghichu) :
                new ObjectParameter("ghichu", typeof(string));
    
            var trangthaiParameter = trangthai.HasValue ?
                new ObjectParameter("trangthai", trangthai) :
                new ObjectParameter("trangthai", typeof(int));
    
            var maMHParameter = maMH != null ?
                new ObjectParameter("MaMH", maMH) :
                new ObjectParameter("MaMH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertToDo", noidungParameter, manvParameter, thoihanParameter, ngaygiaoParameter, denhanParameter, ghichuParameter, trangthaiParameter, maMHParameter);
        }
    
        public virtual int insertToDo2(string noidung, Nullable<int> manv, Nullable<System.DateTime> ngaygiao, Nullable<System.DateTime> denhan, string ghichu, Nullable<int> trangthai, string maMH)
        {
            var noidungParameter = noidung != null ?
                new ObjectParameter("noidung", noidung) :
                new ObjectParameter("noidung", typeof(string));
    
            var manvParameter = manv.HasValue ?
                new ObjectParameter("Manv", manv) :
                new ObjectParameter("Manv", typeof(int));
    
            var ngaygiaoParameter = ngaygiao.HasValue ?
                new ObjectParameter("ngaygiao", ngaygiao) :
                new ObjectParameter("ngaygiao", typeof(System.DateTime));
    
            var denhanParameter = denhan.HasValue ?
                new ObjectParameter("denhan", denhan) :
                new ObjectParameter("denhan", typeof(System.DateTime));
    
            var ghichuParameter = ghichu != null ?
                new ObjectParameter("ghichu", ghichu) :
                new ObjectParameter("ghichu", typeof(string));
    
            var trangthaiParameter = trangthai.HasValue ?
                new ObjectParameter("trangthai", trangthai) :
                new ObjectParameter("trangthai", typeof(int));
    
            var maMHParameter = maMH != null ?
                new ObjectParameter("MaMH", maMH) :
                new ObjectParameter("MaMH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertToDo2", noidungParameter, manvParameter, ngaygiaoParameter, denhanParameter, ghichuParameter, trangthaiParameter, maMHParameter);
        }
    
        public virtual int deleteTDL(Nullable<int> mATDL)
        {
            var mATDLParameter = mATDL.HasValue ?
                new ObjectParameter("MATDL", mATDL) :
                new ObjectParameter("MATDL", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("deleteTDL", mATDLParameter);
        }
    
        public virtual int UPDATETODO(Nullable<int> mATDL, string noidung, Nullable<int> manv, Nullable<System.DateTime> ngaygiao, Nullable<System.DateTime> denhan, string ghichu, Nullable<int> trangthai)
        {
            var mATDLParameter = mATDL.HasValue ?
                new ObjectParameter("MATDL", mATDL) :
                new ObjectParameter("MATDL", typeof(int));
    
            var noidungParameter = noidung != null ?
                new ObjectParameter("noidung", noidung) :
                new ObjectParameter("noidung", typeof(string));
    
            var manvParameter = manv.HasValue ?
                new ObjectParameter("Manv", manv) :
                new ObjectParameter("Manv", typeof(int));
    
            var ngaygiaoParameter = ngaygiao.HasValue ?
                new ObjectParameter("ngaygiao", ngaygiao) :
                new ObjectParameter("ngaygiao", typeof(System.DateTime));
    
            var denhanParameter = denhan.HasValue ?
                new ObjectParameter("denhan", denhan) :
                new ObjectParameter("denhan", typeof(System.DateTime));
    
            var ghichuParameter = ghichu != null ?
                new ObjectParameter("ghichu", ghichu) :
                new ObjectParameter("ghichu", typeof(string));
    
            var trangthaiParameter = trangthai.HasValue ?
                new ObjectParameter("trangthai", trangthai) :
                new ObjectParameter("trangthai", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATETODO", mATDLParameter, noidungParameter, manvParameter, ngaygiaoParameter, denhanParameter, ghichuParameter, trangthaiParameter);
        }
    
        public virtual int insertToDo3(string noidung, Nullable<int> manv, Nullable<System.DateTime> ngaygiao, Nullable<System.DateTime> denhan, string ghichu, Nullable<int> trangthai, string maMH)
        {
            var noidungParameter = noidung != null ?
                new ObjectParameter("noidung", noidung) :
                new ObjectParameter("noidung", typeof(string));
    
            var manvParameter = manv.HasValue ?
                new ObjectParameter("Manv", manv) :
                new ObjectParameter("Manv", typeof(int));
    
            var ngaygiaoParameter = ngaygiao.HasValue ?
                new ObjectParameter("ngaygiao", ngaygiao) :
                new ObjectParameter("ngaygiao", typeof(System.DateTime));
    
            var denhanParameter = denhan.HasValue ?
                new ObjectParameter("denhan", denhan) :
                new ObjectParameter("denhan", typeof(System.DateTime));
    
            var ghichuParameter = ghichu != null ?
                new ObjectParameter("ghichu", ghichu) :
                new ObjectParameter("ghichu", typeof(string));
    
            var trangthaiParameter = trangthai.HasValue ?
                new ObjectParameter("trangthai", trangthai) :
                new ObjectParameter("trangthai", typeof(int));
    
            var maMHParameter = maMH != null ?
                new ObjectParameter("MaMH", maMH) :
                new ObjectParameter("MaMH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertToDo3", noidungParameter, manvParameter, ngaygiaoParameter, denhanParameter, ghichuParameter, trangthaiParameter, maMHParameter);
        }
    
        public virtual int UPDATETODO1(Nullable<int> mATDL, string noidung, Nullable<int> manv, Nullable<System.DateTime> ngaygiao, Nullable<System.DateTime> denhan, string ghichu, Nullable<int> trangthai)
        {
            var mATDLParameter = mATDL.HasValue ?
                new ObjectParameter("MATDL", mATDL) :
                new ObjectParameter("MATDL", typeof(int));
    
            var noidungParameter = noidung != null ?
                new ObjectParameter("noidung", noidung) :
                new ObjectParameter("noidung", typeof(string));
    
            var manvParameter = manv.HasValue ?
                new ObjectParameter("Manv", manv) :
                new ObjectParameter("Manv", typeof(int));
    
            var ngaygiaoParameter = ngaygiao.HasValue ?
                new ObjectParameter("ngaygiao", ngaygiao) :
                new ObjectParameter("ngaygiao", typeof(System.DateTime));
    
            var denhanParameter = denhan.HasValue ?
                new ObjectParameter("denhan", denhan) :
                new ObjectParameter("denhan", typeof(System.DateTime));
    
            var ghichuParameter = ghichu != null ?
                new ObjectParameter("ghichu", ghichu) :
                new ObjectParameter("ghichu", typeof(string));
    
            var trangthaiParameter = trangthai.HasValue ?
                new ObjectParameter("trangthai", trangthai) :
                new ObjectParameter("trangthai", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATETODO1", mATDLParameter, noidungParameter, manvParameter, ngaygiaoParameter, denhanParameter, ghichuParameter, trangthaiParameter);
        }
    
        public virtual int insertToDo4(string noidung, Nullable<int> manv, Nullable<System.DateTime> ngaygiao, Nullable<System.DateTime> denhan, string ghichu, Nullable<int> trangthai, string maMH)
        {
            var noidungParameter = noidung != null ?
                new ObjectParameter("noidung", noidung) :
                new ObjectParameter("noidung", typeof(string));
    
            var manvParameter = manv.HasValue ?
                new ObjectParameter("Manv", manv) :
                new ObjectParameter("Manv", typeof(int));
    
            var ngaygiaoParameter = ngaygiao.HasValue ?
                new ObjectParameter("ngaygiao", ngaygiao) :
                new ObjectParameter("ngaygiao", typeof(System.DateTime));
    
            var denhanParameter = denhan.HasValue ?
                new ObjectParameter("denhan", denhan) :
                new ObjectParameter("denhan", typeof(System.DateTime));
    
            var ghichuParameter = ghichu != null ?
                new ObjectParameter("ghichu", ghichu) :
                new ObjectParameter("ghichu", typeof(string));
    
            var trangthaiParameter = trangthai.HasValue ?
                new ObjectParameter("trangthai", trangthai) :
                new ObjectParameter("trangthai", typeof(int));
    
            var maMHParameter = maMH != null ?
                new ObjectParameter("MaMH", maMH) :
                new ObjectParameter("MaMH", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertToDo4", noidungParameter, manvParameter, ngaygiaoParameter, denhanParameter, ghichuParameter, trangthaiParameter, maMHParameter);
        }
    
        public virtual int UPDATETODO2(Nullable<int> mATDL, string noidung, Nullable<int> manv, Nullable<System.DateTime> ngaygiao, Nullable<System.DateTime> denhan, string ghichu, Nullable<int> trangthai)
        {
            var mATDLParameter = mATDL.HasValue ?
                new ObjectParameter("MATDL", mATDL) :
                new ObjectParameter("MATDL", typeof(int));
    
            var noidungParameter = noidung != null ?
                new ObjectParameter("noidung", noidung) :
                new ObjectParameter("noidung", typeof(string));
    
            var manvParameter = manv.HasValue ?
                new ObjectParameter("Manv", manv) :
                new ObjectParameter("Manv", typeof(int));
    
            var ngaygiaoParameter = ngaygiao.HasValue ?
                new ObjectParameter("ngaygiao", ngaygiao) :
                new ObjectParameter("ngaygiao", typeof(System.DateTime));
    
            var denhanParameter = denhan.HasValue ?
                new ObjectParameter("denhan", denhan) :
                new ObjectParameter("denhan", typeof(System.DateTime));
    
            var ghichuParameter = ghichu != null ?
                new ObjectParameter("ghichu", ghichu) :
                new ObjectParameter("ghichu", typeof(string));
    
            var trangthaiParameter = trangthai.HasValue ?
                new ObjectParameter("trangthai", trangthai) :
                new ObjectParameter("trangthai", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATETODO2", mATDLParameter, noidungParameter, manvParameter, ngaygiaoParameter, denhanParameter, ghichuParameter, trangthaiParameter);
        }
    }
}
